steps:
#1. First Clone the Github Repo Containing the Server Profile change made aaah


#2. Pull the Desired PingDirectory Docker image from Dockerhub 
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'echo'
  args: ['Pulling the PingDirectory Docker image from Dockerhub']
  
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull','pingidentity/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}']

#3. Pull the Desired PingDirectory Docker image from Dockerhub and retags the image using the server profile tag number
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'echo'
  args: ['Retagging the PingDirectory Docker image']
  
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'tag'
  - 'pingidentity/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}'
  - '${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'echo'
  args: 
  - 'docker'
  - 'run'
  - '-d'
  - '--name'
  - 'pingdirectory-temp-container'
  - '${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}'
  - 'sleep'
  - 'infinity'
  - '&&'
  - '-c'
  - 'git clone ${_SERVER_PROFILE_GIT_REPOSITORY} /workspace/gcp-server-profile'
  - '&&'
  - 'docker'
  - 'cp'
  - '/workspace/gcp-server-profile/gcp-server-profile/pingdirectory/*'
  - 'pingdirectory-temp-container:/opt/staging/'
  - '&&'
  - 'docker commit pd-temp-container ${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}--newwww'
  - '&&'
  - 'docker push ${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}--newwww'
  

# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'bash'
#   args:
#       - '-c'
#       - 'git clone ${_SERVER_PROFILE_GIT_REPOSITORY} /workspace/gcp-server-profile'
#       - '&&'
#       - 'docker'
#       - 'cp'
#       - '/workspace/gcp-server-profile/gcp-server-profile/pingdirectory/*'
#       - 'pingdirectory-temp-container:/opt/staging/'


# #Push the image  
# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'echo'
#   args: ['Pushing the Docker image to GCR']
  
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push','${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}']

# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'bash'
#   args:
#       - '-c'
#       - 'git clone ${_SERVER_PROFILE_GIT_REPOSITORY} /workspace/gcp-server-profile'

# - name: 'gcr.io/cloud-builders/docker'
#   args: 
#   - 'cp'
#   - '/workspace/gcp-server-profile/gcp-server-profile/pingdirectory/*'
#   - 'pd-temp-container:/opt/staging/'


#3. Pull the Server Profile

# - name: 'gcr.io/cloud-builders/git'
#   entrypoint: 'echo'
#   args: ['Pulling the Server Profile from github']
  
# - name: 'gcr.io/cloud-builders/git'
#   args: ['clone','${_SERVER_PROFILE_GIT_REPOSITORY}','/workspace']
  # volumes:
  #     - name: 'pd-storage-volume'
  #       path: '/workspace'
 
# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'bash'
#   args:
#       - '-c'
#       - 'apt-get update && apt-get install -y git'

 # Clone the Git repository
# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'bash'
#   args:
#       - '-c'
#       - 'git clone ${_SERVER_PROFILE_GIT_REPOSITORY} /workspace/gcp-server-profile'
#       - '&&'
#       - 'echo Running temporary PD container to copy the server profile into'
#       - '&&'
#       - 'docker run -d --name pd-temp-container ${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}'
#       - '&&'
#       - 'docker cp /workspace/gcp-server-profile/pingdirectory/* pd-temp-container:/opt/staging'
#       - '&&'
#       - 'echo Committing Changes to the Docker Image'
#       - '&&'
#       - 'docker commit pd-temp-container ${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}'
#       - '&&'
#       - 'echo Pushing ${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG} to Artifact Registry'
#       - '&&'
#       - 'docker push ${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}'

  
#3. Runs a Container using the new tagged image
# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'echo'
#   args: ['Running temporary PD container to copy the server profile into']

  
# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'echo'
#   args: ['Temporary Container is Running']

# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'echo'
#   args: ['Copying Server Profile into the PD Docker Container']


# - name: 'gcr.io/cloud-builders/docker'
#   args: ['cp','/workspace/gcp-server-profile/pingdirectory/*', 'pd-temp-container:/opt/staging']
  
  #hello
  

# - name: 'gcr.io/cloud-builders/docker'
#   args: ['commit', 'pd-temp-container', '${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}']
  

# - name: 'gcr.io/cloud-builders/docker'
#   args: ['stop', 'pd-temp-container']
  


#Push the image  
# - name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'echo'
#   args: ['Pushing the Docker image to GCR']
  
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push','${_GCR_REPOSITORY_URL}/pingdirectory:${_PINGDIRECTORY_DOCKER_IMAGE_TAG}-${_SERVER_PROFILE_RELEASE_TAG}']
  
# #Update the container image using kubectl set newww
# - name: 'gcr.io/cloud-builders/kubectl'
#   args:
#   - 'set'
#   - 'image'
#   - 'deployment/${_DEPLOYMENTNAME}'
#   - '${_CONTAINERNAME}=gcr.io/${_PROJECT}/${_CONTAINERNAME}:${_VERSION}'
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
#   - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
# volumes:
#   - name: 'my-volume'
#     driver: 'local'
substitutions:
    #GCP Specific configuration. Please DON'T change anything
    _PROJECT: learn-gcp-with-mahesh
    _ZONE: asia-south1-a
    _GKE_CLUSTER: learn-gcp-with-mahesh-gke-cluster
    
    # #Repository Specific configuration. DevOps can change this settings
    # _DEPLOYMENTNAME: hello-world-service
    # _CONTAINERNAME: hello-world-service    
    # _REPO_NAME: cicd-service
    
    # Developers ONLY change
    _VERSION: v1.0

    
    # DESIRED PingDirectory Docker Image Configurations
    _PINGDIRECTORY_DOCKER_IMAGE_TAG: 9.2.0.0-alpine_3.17.2-al11-edge
    

    # GCR CONTAINER IMAGE REPOSITORY
    _GCR_REPOSITORY_URL: us-central1-docker.pkg.dev/pingdirectory-358917/likeminds-docker-repository
    


    # ServerProfile Repository Specific Variables
    _SERVER_PROFILE_GIT_REPOSITORY: https://github.com/TuanLikeminds/gcp-server-profile
    _SERVER_PROFILE_RELEASE_TAG: V1.0.6

options:
    substitution_option: 'ALLOW_LOOSE'

